import unicodedata
from datetime import datetime

def normalizar_texto(texto):
    return ''.join(
        c for c in unicodedata.normalize('NFD', texto)
        if unicodedata.category(c) != 'Mn'
    ).lower()

def responder(mensagem):
    mensagem = normalizar_texto(mensagem).strip()

    if "tempo" in mensagem:
        return "N√£o sei a previs√£o do tempo agora, mas espero que esteja um dia lindo!"

    if "hora" in mensagem or "horas" in mensagem:
        agora = datetime.now()
        return f"Agora s√£o {agora.strftime('%H:%M')}."

    respostas = {
        "oi": "Ol√°! Como posso ajudar voc√™ hoje?",
        "ola": "Oi! Tudo certo por a√≠?",
        "bom dia": "Bom dia! N√£o esque√ßa de se hidratar! üíß",
        "boa tarde": "Boa tarde! Como posso te ajudar?",
        "boa noite": "Boa noite! Espero que tenha tido um √≥timo dia!",
        "tudo bem": "Tudo √≥timo, obrigado por perguntar!",
        "qual seu nome": "Sou um chatbot em constante evolu√ß√£o!",
        "ajuda": "Claro! Voc√™ pode me perguntar sobre o tempo, a hora, ou apenas dizer 'oi'.",
        "tchau": "At√© mais! Foi √≥timo conversar com voc√™!",
    }

    # Tenta achar uma resposta conhecida
    resposta = respostas.get(mensagem)

    # Se n√£o encontrar, retorna uma resposta padr√£o
    if resposta is None:
        resposta = "Desculpe, n√£o entendi o que voc√™ quis dizer. Pode tentar de outra forma?"

    return resposta